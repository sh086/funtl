(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{470:function(s,a,t){"use strict";t.r(a);var e=t(25),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"tomcat内存参数配置错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tomcat内存参数配置错误"}},[s._v("#")]),s._v(" Tomcat内存参数配置错误")]),s._v(" "),t("p",[t("strong",[s._v("参考：")])]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/duanxz/p/10185946.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux进程被杀掉（OOM killer）查看系统日志"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"问题描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[s._v("#")]),s._v(" 问题描述")]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("2021-06-03 21点")]),s._v("左右，CRM接口访问不通了，通过查询系统日志，发现"),t("code",[s._v("21:20")]),s._v("时，由于java程序内存溢出，所以Linux系统kill了java程序。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Out of memory"')]),s._v(" /var/log/messages\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询结果")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":20:04 iZ0jz01kxq0yzpckqmhmw8Z kernel: Out of memory: Kill process "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("24635")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" score "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("861")]),s._v(" or sacrifice child\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者查看系统日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("egrep")]),s._v(" -i -r "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'killed process'")]),s._v(" /var/log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[s._v("#")]),s._v(" 解决方案")]),s._v(" "),t("p",[s._v("​\t\t这个是由于"),t("code",[s._v("JAVA_OPTS")]),s._v("配置错误引起的，原来配置的是"),t("code",[s._v("-server -Xms8000m -Xmx8000m")]),s._v("，导致"),t("code",[s._v("GC")]),s._v("不能及时回收，现改成如下参数配置。并新增"),t("code",[s._v("--restart always")]),s._v(" ，使得容器可以出错后自动重启。")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("div",{staticClass:"highlight-lines"},[t("br"),t("br"),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("br"),t("div",{staticClass:"highlighted"},[s._v(" ")]),t("br"),t("br"),t("br")]),t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker run -d   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TZ")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Asia/Shanghai   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--restart always   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /home/crm-api/logs:/usr/local/tomcat/logs  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_OPTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-server -Xms2000m -Xmx6000m'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--name crm-api   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 crm-api\n")])]),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("​\t\tJVM初始分配的堆内存由"),t("code",[s._v("-Xms")]),s._v("指定，"),t("strong",[s._v("默认是物理内存的1/64")]),s._v("；JVM最大分配的堆内存由"),t("code",[s._v("-Xmx")]),s._v("指定，按需分配。"),t("strong",[s._v("默认是物理内存的1/4")]),s._v("。默认空余堆内存小于"),t("code",[s._v("40%")]),s._v("时，JVM就会增大堆直到"),t("code",[s._v("-Xmx")]),s._v("的最大限制；空余堆内存大于"),t("code",[s._v("70%")]),s._v("时，"),t("code",[s._v("JVM")]),s._v("会减少堆直到"),t("code",[s._v("-Xms")]),s._v("的最小限制。因此服务器一般设置"),t("code",[s._v("-Xms")]),s._v("、"),t("code",[s._v("-Xmx")]),s._v("相等以避免在每次"),t("code",[s._v("GC")]),s._v(" 后调整堆的大小。")]),s._v(" "),t("p",[s._v("​\t\t如果"),t("code",[s._v("-Xmx")]),s._v(" 不指定或者指定偏小，应用可能会导致"),t("code",[s._v("java.lang.OutOfMemory")]),s._v("错误，此错误来自"),t("code",[s._v("JVM")]),s._v("，不是"),t("code",[s._v("Throwable")]),s._v("的，无法用"),t("code",[s._v("try...catch")]),s._v("捕捉。")])])}),[],!1,null,null,null);a.default=n.exports}}]);